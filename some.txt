<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Timetable Website</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <div class="login-box">
            <h2>Login</h2>
            <form id="loginForm">
                <label for="loginUsername">Username:</label>
                <input type="text" id="loginUsername" required><br>

                <label for="loginPassword">Password:</label>
                <input type="password" id="loginPassword" required><br>

                <button type="submit">Login</button>
            </form>
        </div>
        <div class="signup-box">
            <h2>Create Account</h2>
            <form id="signupForm">
                <label for="newUsername">Username:</label>
                <input type="text" id="newUsername" required><br>

                <label for="newPassword">Password:</label>
                <input type="password" id="newPassword" required>
                <button type="button" id="togglePassword">Show</button>
                <p id="passwordStrength" class="password-strength"></p><br>

                <label for="name">Name:</label>
                <input type="text" id="name" required><br>

                <label for="rollNumber">Roll Number:</label>
                <input type="text" id="rollNumber" required><br>

                <label for="section">Section:</label>
                <input type="text" id="section" required><br>

                <button type="submit">Create Account</button>
            </form>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>








body {
    font-family: Arial, sans-serif;
    background-color: #222831; /* Dark blue background */
    color: #eeeeee; /* Light gray text */
}

.container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.login-box, .signup-box {
    background-color: #393e46; /* Dark gray background */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    text-align: left;
    width: 300px;
    margin-right: 20px;
}

h2 {
    margin-top: 0;
    color: #00adb5; /* Light blue heading */
}

label, input {
    display: block;
    margin-bottom: 15px;
    color: #eeeeee; /* Light gray text */
}

input {
    width: calc(100% - 20px);
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #222831; /* Dark blue background for input */
    color: #eeeeee; /* Light gray text */
}

button {
    background-color: #00adb5; /* Light blue button */
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #393e46; /* Dark gray button on hover */
}






// Function to check password strength
function checkPasswordStrength(password) {
    const strongRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    const mediumRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$/;
    const weakRegex = /^(?=.*[a-z])(?=.*\d)[A-Za-z\d]{8,}$/;

    if (strongRegex.test(password)) {
        return 'strong';
    } else if (mediumRegex.test(password)) {
        return 'medium';
    } else if (weakRegex.test(password)) {
        return 'weak';
    } else {
        return 'very weak';
    }
}

// Function to show password strength suggestion
function showPasswordStrength(password) {
    const strength = checkPasswordStrength(password);
    let suggestion = '';

    switch (strength) {
        case 'strong':
            suggestion = 'Strong password!';
            break;
        case 'medium':
            suggestion = 'Medium strength. Consider adding special characters for better security.';
            break;
        case 'weak':
            suggestion = 'Weak password. Add uppercase letters and special characters.';
            break;
        default:
            suggestion = 'Very weak password. Please choose a stronger password.';
    }

    document.getElementById('passwordStrength').textContent = suggestion;
}

// Show/hide password
function togglePasswordVisibility(inputId, toggleId) {
    const passwordInput = document.getElementById(inputId);
    const toggleButton = document.getElementById(toggleId);

    if (passwordInput.type === 'password') {
        passwordInput.type = 'text';
        toggleButton.textContent = 'Hide';
    } else {
        passwordInput.type = 'password';
        toggleButton.textContent = 'Show';
    }
}

// Event listener for password input to check strength and show suggestion
document.getElementById('newPassword').addEventListener('input', function() {
    const password = this.value;
    showPasswordStrength(password);
});

// Event listener for password visibility toggle
document.getElementById('togglePassword').addEventListener('click', function() {
    togglePasswordVisibility('newPassword', 'togglePassword');
});

// Simulate user registration and login (you should replace this with server-side code)
document.getElementById('signupForm').addEventListener('submit', function (e) {
    e.preventDefault();
    // Get user input
    const newUsername = document.getElementById('newUsername').value;
    const newPassword = document.getElementById('newPassword').value;
    const name = document.getElementById('name').value;
    const rollNumber = document.getElementById('rollNumber').value;
    const section = document.getElementById('section').value;

    // Store the user data or send it to the server for storage
    console.log('User registered:', newUsername, newPassword, name, rollNumber, section);
    
    // Show thank you message
    alert('Thank you! Your account has been created successfully.');

    // You should perform validation and store data securely on the server.
});

document.getElementById('loginForm').addEventListener('submit', function (e) {
    e.preventDefault();
    // Get user input
    const loginUsername = document.getElementById('loginUsername').value;
    const loginPassword = document.getElementById('loginPassword').value;

    // Simulate user authentication (you should replace this with server-side code)
    // You should validate the user's credentials against stored data on the server.
    if (loginUsername === 'sampleuser' && loginPassword === 'password') {
        alert('Login successful!');
        // Redirect to the dashboard or perform other actions here.
    } else {
        alert('Invalid username or password.');
    }
});
